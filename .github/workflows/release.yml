name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release pushed tag
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures full history is available

      - name: Install ps2exe in PowerShell
        run: powershell -Command 'Install-Module -Name ps2exe -Force -Scope CurrentUser'

      - name: Run build.ps1 to create distribution folder
        run: powershell -File ./build.ps1

      - name: Check distribution folder contents
        run: |
          if (Test-Path -Path "distribution") {
            Write-Host "Contents of distribution folder:"
            Get-ChildItem -Path "distribution"
          } else {
            Write-Host "Distribution folder does not exist!"
          }

      - name: Generate Release Notes
        id: release_notes
        run: |
          $prev_tag = git describe --tags --abbrev=0 HEAD~ || "v0.0.0"
          $changes = git log "$prev_tag"..HEAD --pretty=format:"%s by @%an in %h" --reverse
          $breaking = ""
          $features = ""
          $fixes = ""
          $others = ""
          foreach ($line in $changes) {
            if ($line -match "BREAKING CHANGE") {
              $breaking += "`n⚠️ $line"
            } elseif ($line -match "feat:") {
              $features += "`n- Feature: $line"
            } elseif ($line -match "fix:") {
              $fixes += "`n- Fix: $line"
            } else {
              $others += "`n- Other: $line"
            }
          }
          $notes = "## Changelog"
          if ($fixes) { $notes += "`n$fixes" }
          if ($features) { $notes += "`n$features" }
          if ($breaking) { $notes += "`n$breaking" }
          if ($others) { $notes += "`n$others" }
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="${tag#v}" \
              --notes "$RELEASE_NOTES" \
              distribution.zip
